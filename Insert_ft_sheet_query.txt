   MERGE INTO FT_INTERNAL_FT_REQ dest
   USING (SELECT DISTINCT(D.ACCOUNT_NUMBER) 
   FROM FT_INTERNAL_HOLD D)src
   ON(dest.CBS_ACCOUNT_NUMBER=src.ACCOUNT_NUMBER)
   WHEN MATCHED
   THEN 
   UPDATE SET dest.FLG_HOLD='YES';
   
   MERGE INTO FT_INTERNAL_DD_REQ dest
   USING (SELECT DISTINCT(D.ACCOUNT_NUMBER) 
   FROM FT_INTERNAL_HOLD D)src
   ON(dest.CBS_LOAN_ACCOUNT_NUMBER=src.ACCOUNT_NUMBER)
   WHEN MATCHED
   THEN 
   UPDATE SET dest.FLG_HOLD='YES';
   
UPDATE FT_INTERNAL_DD_REQ
SET CBS_LOAN_ACCOUNT_NUMBER=TRIM(CBS_LOAN_ACCOUNT_NUMBER), AMOUNT=TRIM(AMOUNT);

UPDATE FT_DB_POSTING
SET NEW_CBS_ACCOUNT_NO=TRIM(NEW_CBS_ACCOUNT_NO), FT_AMOUNT=TRIM(FT_AMOUNT);

UPDATE FT_INTERNAL_FT_REQ
SET CBS_ACCOUNT_NUMBER=TRIM(CBS_ACCOUNT_NUMBER), AMOUNT=TRIM(AMOUNT);

MERGE INTO FT_INTERNAL_DD_REQ dest
USING (SELECT DISTINCT(D.NEW_CBS_ACCOUNT_NO), D.FT_AMOUNT 
FROM FT_DB_POSTING D)src
ON(dest.CBS_LOAN_ACCOUNT_NUMBER=src.NEW_CBS_ACCOUNT_NO AND dest.AMOUNT <=src.FT_AMOUNT)
WHEN MATCHED
THEN 
UPDATE SET dest.DB_CHECK='MATCHED';

MERGE INTO FT_INTERNAL_DD_REQ dest
USING (SELECT DISTINCT(D.NEW_CBS_ACCOUNT_NO), D.FT_AMOUNT 
FROM FT_DB_POSTING D)src
ON(dest.CBS_LOAN_ACCOUNT_NUMBER=src.NEW_CBS_ACCOUNT_NO AND dest.AMOUNT > src.FT_AMOUNT)
WHEN MATCHED
THEN 
UPDATE SET dest.DB_CHECK='HOLD';
   
MERGE INTO FT_INTERNAL_FT_REQ dest
USING (SELECT DISTINCT(D.NEW_CBS_ACCOUNT_NO), D.FT_AMOUNT 
FROM FT_DB_POSTING D)src
ON(dest.CBS_ACCOUNT_NUMBER=src.NEW_CBS_ACCOUNT_NO AND dest.AMOUNT <=src.FT_AMOUNT)
WHEN MATCHED
THEN 
UPDATE SET dest.DB_CHECK='MATCHED';   

MERGE INTO FT_INTERNAL_FT_REQ dest
USING (SELECT DISTINCT(D.NEW_CBS_ACCOUNT_NO), D.FT_AMOUNT 
FROM FT_DB_POSTING D)src
ON(dest.CBS_ACCOUNT_NUMBER=src.NEW_CBS_ACCOUNT_NO AND dest.AMOUNT > src.FT_AMOUNT)
WHEN MATCHED
THEN 
UPDATE SET dest.DB_CHECK='HOLD';
   
INSERT INTO FT(PAYMENT_MODE, URN_NUMBER, ACCOUNT_NUMBER, ACCOUNT_HOLDER, BENEFICIARY_ACCOUNT_NUMBER,
IFSC_CODE, AMOUNT, TRANSACTION_DATE, PRODUCT_TYPE, LOT_TYPE, MOBILE_NUMBER,
REMARKS, CLOSURE_ACCOUNT_NUMBER, 
HOSPICASH_PREMIUM,
HOSPICASH_REMARKS,
CATEGORY, HD_TICKET)
SELECT PAYMENT_MODE,
URN_NO,
CBS_ACCOUNT_NUMBER,
ACCOUNT_HOLDER,
BENEFICIARY_BANK_ACCOUNT_NO,
IFSC_Code,
AMOUNT,
TRANSACTION_DATE,
PRODUCT_TYPE,
LOT_TYPE,
MOBILE_NUMBER,
REMARKS,
CLOSURE_ACCOUNT_NUMBER,
HOSPICASH_PREMIUM,
HOSPICASH_REMARKS,
CATEGORY,
HD_TICKET FROM FT_INTERNAL_FT_REQ WHERE DB_CHECK='MATCHED';

INSERT INTO FT(DEBIT_ACCOUNT_NO, PAYMENT_MODE,BENEFICIARY_NAME, AMOUNT,PAYMENT_DATE,REMARKS_1, PRINT_LOCATION_BB_NAME, PAYABLE_LOCATION, EMPLOYEE_NAME,
EMPLOYEE_ID_NO,ACCOUNT_NUMBER,APP_NUMBER,BRANCH_CODE_PRINT_LOCATION_BB, REMARKS_2, CUSTOMER_NAME, CATEGORY , HD_TICKET)
SELECT
DEBIT_ACCOUNT_NO,
PAYMENT_MODE,
BENEFICIARY_NAME,
AMOUNT,
PAYMENT_DATE,
REMARKS_1,
PRINT_LOCATION_BB_NAME,
PAYABLE_LOCATION,
EMPLOYEE_NAME,
EMPLOYEE_ID,
CBS_LOAN_ACCOUNT_NUMBER,
APPLICATION_NO,
BRANCH_CODE_PRINT_LOCATION_BB,
REMARKS_2,
CUSTOMER_NAME,
CATEGORY,
HD_TICKET FROM FT_INTERNAL_DD_REQ WHERE DB_CHECK='MATCHED';

UPDATE FT
SET CATEGORY=CASE
WHEN ACCOUNT_NUMBER IN (SELECT DISTINCT(LOAN_ACCOUNT_NUMBER) FROM FT_ATYATI) THEN 'ATYATI'
WHEN ACCOUNT_NUMBER IN (SELECT DISTINCT(LOAN_ACCOUNT_NO) FROM FT_BC_PARTNER) THEN 'BC_PARTNER'
WHEN ACCOUNT_NUMBER IN (SELECT DISTINCT(CBS_LOAN_ACCOUNT_NUMBER) FROM FT_INTERNAL_DD_REQ) THEN 'INTENAL_DD'
WHEN ACCOUNT_NUMBER IN (SELECT DISTINCT(CBS_ACCOUNT_NUMBER) FROM FT_INTERNAL_FT_REQ) THEN 'INTENAL_FT'
END
WHERE ACCOUNT_NUMBER IS NOT NULL;

UPDATE FT
SET ACCOUNT_NUMBER=TRIM(ACCOUNT_NUMBER),
IFSC_CODE=trim(IFSC_CODE),
URN_NUMBER=trim(URN_NUMBER),
MOBILE_NUMBER=TRIM(MOBILE_NUMBER),
BENEFICIARY_ACCOUNT_NUMBER=TRIM(BENEFICIARY_ACCOUNT_NUMBER),
PRODUCT_TYPE=TRIM(PRODUCT_TYPE)
WHERE ACCOUNT_NUMBER IS NOT NULL;

UPDATE FT
SET
LAN_CHECK= NULL,
MOBILE_NUMBER_CHECK=NULL,
CASA_CHECK=NULL,
IFSC_CODE_CHECK=NULL,
SPECIAL_CHAR_CHECK=NULL
WHERE ACCOUNT_NUMBER IS NOT NULL;

UPDATE FT_MASTER_LAN
SET CBS_ACCOUNT_NO=TRIM(CBS_ACCOUNT_NO);

MERGE INTO FT L
USING (SELECT DISTINCT(D.CBS_ACCOUNT_NO)
    FROM FT_MASTER_LAN D) TMP
ON (L.ACCOUNT_NUMBER = TMP.CBS_ACCOUNT_NO AND L.REMARKS is not null)
WHEN MATCHED THEN 
UPDATE SET L.LAN_CHECK ='NO', L.REASON='Check LAN';
